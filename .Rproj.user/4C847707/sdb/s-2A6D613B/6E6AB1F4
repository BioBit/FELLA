{
    "contents" : "# library(shiny)\n\nshinyUI(fluidPage(\n  titlePanel(title = h1(a(href = \"http://b2slab.upc.edu/\", img(src='b2slab_small.png', align = \"center\")), \n                        \"Pathway enrichment from KEGG compounds\", \n                        a(href = \"http://www.creb.upc.es/\", img(src='creb_upc.png', align = \"center\"), align = \"center\")),  \n             windowTitle = \"SHELLA: enrichment tool for Metabolomics\"\n            \n  ),\n  \n  \n  \n  fluidRow(tabsetPanel(\n           tabPanel(\"1. Upload your compounds\", \n                    column(12, \n                           column(3, \n                                  h2(\"Overview and instructions\"), \n                                  h5(\"SHELLA online tool allows you to perform a pathway enrichment for Metabolomics \n                                     using KEGG database.\"), \n                                  h3(\"1. Upload your compounds\"), \n                                  h5(\"You can upload your data in terms of affected compounds, \n                                     alternatively you can use our sample data. Once your compounds are uplodaded, \n                                     you will be shown the matches and the mismatches (excluded compounds).\"), \n                                  h3(\"2. Advanced options\"), \n                                  h5(\"This tab allows you to adjust methodological and graphical parameters. You can \n                                     specify your algorithm of preference, the thresholds and the maximum nodes allowed \n                                     in the solution graph. You can also apply a visual filter using GO cellular \n                                     component for the enzymes in the solution.\"), \n                                  h3(\"3. Examine your results\"), \n                                  h5(\"This tab depicts your solution and lets you jump though the connected components \n                                     of the solution graph. In addition, a table gathers the represented nodes along with \n                                     additional data.\"), \n                                  h3(\"4. BiMS viewer\"), \n                                  h5(\"This page contains the BiMS viewer, our self-made tool for iteractively visualising \n                                     your results.\"), \n                                  h3(\"5. R-cytoscape viewer\"), \n                                  h5(\"This tab integrates the r-cytoscapejs visual tool for network analysis.\"), \n                                  h3(\"6. Export your results\"), \n                                  h5(\"A variety of output formats is available for downloading your results.\")\n                           ), \n                           column(3,\n                                  h2(\"Upload your compounds\"), \n                                  radioButtons(\"radioInput\", \n                                               label = h4(\"Define your significant compounds:\"),\n                                               choices = list(\"Example 1\" = 1, \n                                                              \"Example 2\" = 2, \n                                                              \"Example MetaboAnalyst\" = 3, \n                                                              \"I will upload my compounds\" = 4),\n                                               selected = 1),\n                                  \n                                  fileInput(\"file\", label = \"\"),\n                                  \n                                  br(), \n                                  h2(\"Example file\"), \n                                  h5(\"If you are willing to upload your results, here is the format \n                                     that you should use in your file.\"), \n                                  h4(\"This is the content of exampleInput.csv, the file that contains the \n                                     data for 'Example 2':\"),  \n                                  helpText('\"Compounds\"', \n                                           br(),  \n                                           '\"C00986\"', \n                                           br(),\n                                           '\"C01043\"', \n                                           br(),\n                                           '\"C00064\"', \n                                           br(), \n                                           '\"C00014\"', \n                                           br(),\n                                           '\"C00288\"', \n                                           br(),\n                                           '\"C06058\"', \n                                           br()), \n                                  downloadButton(\"downloadExample\", \"Download exampleInput.csv\")\n                           ),\n                           \n                           column(5,\n                                  h2(\"Check your uploaded compounds\"), \n                                  h5(\"Remember to place your compounds as a column in the csv file.\"), \n                                  h6(\"The mapped compounds should appear below:\"), \n                                  tableOutput(\"tableCompounds\"), \n                                  h6(\"Excluded compounds:\"),\n                                  tableOutput(\"tableExcluded\") \n                           )\n                           \n                    )\n            ), \n            tabPanel(\"2. Advanced options\", \n                    column(12, \n                           h2(\"Adjust arguments (optional)\"), \n                           column(3,\n                                  h3(\"The method\"), \n                                  #################################\n                                  selectInput(\"method\", \n                                              label = h4(\"Method choice\"),\n                                              choices = list(\"Hypergeometric test\" = \"hypergeom\", \n                                                             \"Heat diffusion\" = \"diffusion\", \n                                                             \"PageRank\" = \"pagerank\"),\n                                              selected = \"diffusion\"), \n                                  \n                                  #################################\n                                  selectInput(\"approx\", \n                                              label = h4(\"P-values approximation\"),\n                                              choices = list(\"Normality\" = \"normality\", \n                                                             \"Simulation (slower)\" = \"simulation\"),\n                                              selected = \"normality\"), \n                                  sliderInput(\"niter\", \n                                              label = h4(\"Number of iterations (if simulation)\"), \n                                              min = 5000, \n                                              max = 15000, \n                                              step = 1000,\n                                              value = 10000)\n                           ), \n                           column(4,\n                                  h3(\"Graphical parameters\"), \n                                  #################################\n                                  sliderInput(\"threshold\", \n                                              label = h4(\"Threshold (fdr) for the nodes in the solution graph\"), \n                                              min = 0.001, \n                                              max = 0.1, \n                                              step = 0.001,\n                                              value = 0.05), \n                                  #################################\n                                  sliderInput(\"nlimit\", \n                                              label = h4(\"Limit for the number of nodes in the solution graph\"), \n                                              min = 40, \n                                              max = 300, \n                                              step = 5, \n                                              value = 250), \n                                  #################################\n                                  selectInput(\"splitByConnectedComponent\", \n                                              label = h4(\"Split solution graph by connected components?\"),\n                                              choices = list(\"Yes\" = T, \n                                                             \"No\" = F),\n                                              selected = T), \n                                  #################################\n                                  sliderInput(\"thresholdConnectedComponent\", \n                                              label = h4(\"Threshold for the size of a connected component to be shown\"), \n                                              min = 0.001, \n                                              max = 0.1, \n                                              step = 0.001,\n                                              value = 0.05), \n                                  #################################\n                                  sliderInput(\"LabelLengthAtPlot\", \n                                               label = h4(\"Limit for the label length in the plot\"), \n                                              min = 10, \n                                              max = 100, \n                                              step = 1, \n                                              value = 22)\n                                  #################################\n                           ), \n                           column(4,\n                                  h3(\"GO Cellullar Component for enzymes\"), \n                                  h5(\"You can add a cellular component filter for the enzymes in your output. \n                                     For example, if you decide to filter by 'mitochondrion', use the example GO label. \n                                     For each enzyme family, its GO term will be determined by the best semantic similarity \n                                     using the genes in that family. The GO cellular component of the best hit will be \n                                     appended to the node label and the node shape will become triangular. If GO \n                                     annotations are unavailable for an enzyme, it will be left with a circular shape.\"), \n                                  #################################\n                                  textInput(\"GO.CellularComponent\", \n                                            label = h4(\"Specify a GO term for Cellullar component (optional and slower)\"), \n                                            value = NULL), \n                                  actionButton(\"exampleGOCC\", label = \"GO CC example\"), \n                                  #################################\n                                  selectInput(\"GONamesAsLabels\", \n                                              label = h4(\"Should GO names used as labels, instead of GO id's?\"),\n                                              choices = list(\"Yes\" = T, \n                                                             \"No\" = F),\n                                              selected = T)\n                                  \n                           )\n                           )\n\n           ), \n           #################################\n           tabPanel(\"3. Examine your results\", \n                    textOutput(\"graphSize\", container = h2), \n                    textOutput(\"hoverNode\", container = h3), \n                    selectInput(\"selectGraphCC\", \n                                label = \"Select connected component to visualise:\", \n                                choices = list(\"No graph available\" =  1), \n                                selected = 1), \n                    plotOutput(\"plotSolution\", \n#                                click = \"clickSolution\", \n                               hover = \"hoverSolution\", \n                               width = \"1200px\", \n                               height = \"1200px\"), \n                    tableOutput(\"tableSolution\")\n                    \n           ), \n           #################################\n           tabPanel(\"4. BIMS Viewer\"\n                    \n           ), \n           #################################\n           tabPanel(\"5. R-cytoscape Viewer\", \n                    rcytoscapejsOutput(\"cytoscapePlot\", height = \"1200px\", width = \"1600px\")\n                    \n           ), \n           #################################\n           tabPanel(\"6. Export your results\", \n                    h2(\"Export table as csv\"), \n                    downloadButton(\"exportcsv\", \"Download table with results\"), \n                    h2(\"Export graph solution to R igraph\"), \n                    downloadButton(\"exportigraph\", \"Download R igraph solution\")\n#                     plotOutput(\"plot.hypergeom\", clickId=\"ht.click\", width = \"1200px\", height = \"1200px\"),\n#                     column(12,\n#                            column(6, tableOutput(\"link.hypergeom\")),\n#                            column(6, tableOutput(\"table.hypergeom\"))\n#                     )\n                    \n           )\n  ))\n    \n    \n    \n))",
    "created" : 1441616349433.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2915724460",
    "id" : "6E6AB1F4",
    "lastKnownWriteTime" : 1441620418,
    "path" : "~/Rstuffbro/SHELLA/ui.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}